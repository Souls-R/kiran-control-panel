/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp com.kylinsec.Kiran.SystemDaemon.Biometrics.xml -p Biometrics
 *
 * qdbusxml2cpp is Copyright (C) 2015 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef BIOMETRICS_H_1615953696
#define BIOMETRICS_H_1615953696

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface com.kylinsec.Kiran.SystemDaemon.Biometrics
 */
class BiometricsInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "com.kylinsec.Kiran.SystemDaemon.Biometrics"; }
    static inline const char *staticInterfacePath()
    { return "/com/kylinsec/Kiran/SystemDaemon/Biometrics"; }
public:
    BiometricsInterface(const QDBusConnection &connection, QObject *parent = 0);

    ~BiometricsInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> DeleteEnrolledFinger(const QString &id)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(id);
        return asyncCallWithArgumentList(QLatin1String("DeleteEnrolledFinger"), argumentList);
    }

    inline QDBusPendingReply<> EnrollFprintStart()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("EnrollFprintStart"), argumentList);
    }

    inline QDBusPendingReply<> EnrollFprintStop()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("EnrollFprintStop"), argumentList);
    }

    inline QDBusPendingReply<> VerifyFprintStart(const QString &id)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(id);
        return asyncCallWithArgumentList(QLatin1String("VerifyFprintStart"), argumentList);
    }

    inline QDBusPendingReply<> VerifyFprintStop()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("VerifyFprintStop"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void EnrollFprintStatus(const QString &message, const QString &id, int progress, bool done);
    void VerifyFprintStatus(const QString &result, bool done);
};

namespace com {
  namespace kylinsec {
    namespace Kiran {
      namespace SystemDaemon {
        typedef ::BiometricsInterface BiometricsInterface;
      }
    }
  }
}
#endif
