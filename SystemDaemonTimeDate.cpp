/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp com.unikylin.Kiran.SystemDaemon.TimeDate.xml -p SystemDaemonTimeDate
 *
 * qdbusxml2cpp is Copyright (C) 2015 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#include "SystemDaemonTimeDate.h"
#include <QMutex>
#include <QScopedPointer>
#include <QDBusConnection>


ComUnikylinKiranSystemDaemonTimeDateInterface *ComUnikylinKiranSystemDaemonTimeDateInterface::instance()
{
    static QMutex mutex;
    static QScopedPointer<ComUnikylinKiranSystemDaemonTimeDateInterface> pInst;

    if(Q_UNLIKELY(!pInst)){
        QMutexLocker locker(&mutex);
        if(pInst.isNull()){
            pInst.reset(new ComUnikylinKiranSystemDaemonTimeDateInterface("com.unikylin.Kiran.SystemDaemon",
                                                                          "/com/unikylin/Kiran/SystemDaemon/TimeDate",
                                                                          QDBusConnection::systemBus()));
        }
    }

    return pInst.data();
}

/*
 * Implementation of interface class ComUnikylinKiranSystemDaemonTimeDateInterface
 */
ComUnikylinKiranSystemDaemonTimeDateInterface::ComUnikylinKiranSystemDaemonTimeDateInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent)
    : QDBusAbstractInterface(service, path, staticInterfaceName(), connection, parent)
{
    qRegisterMetaType<ZoneInfo>("ZoneInfo");
    qDBusRegisterMetaType<ZoneInfo>();
    qRegisterMetaType<TimeZoneList>("TimeZoneList");
    qDBusRegisterMetaType<TimeZoneList>();
    ///获取属性变更,属性变更发送信号
    QDBusConnection::systemBus().connect("com.unikylin.Kiran.SystemDaemon",
                                         "/com/unikylin/Kiran/SystemDaemon/TimeDate",
                                         "org.freedesktop.DBus.Properties",
                                         "PropertiesChanged",this,SLOT(handlePropertiesChanged(QDBusMessage)));
}

ComUnikylinKiranSystemDaemonTimeDateInterface::~ComUnikylinKiranSystemDaemonTimeDateInterface()
{
}

void ComUnikylinKiranSystemDaemonTimeDateInterface::handlePropertiesChanged(QDBusMessage msg)
{
    QList<QVariant> arguments = msg.arguments();
    QVariantMap changedProps = qdbus_cast<QVariantMap>(arguments.at(1).value<QDBusArgument>());
    for(auto iter=changedProps.begin();iter!=changedProps.end();iter++){
        emit propertyChanged(iter.key(),iter.value());
    }
}
